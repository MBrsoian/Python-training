# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestSTCHANGE():
    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def test_sTCHANGE(self):
        # Test name: ST CHANGE
        # Step # | name | target | value
        # 1 | open | /main/desktop-login.html |
        self.driver.get("http://10.51.30.52:8090/main/desktop-login.html")
        # 2 | setWindowSize | 976x696 |
        self.driver.set_window_size(976, 696)
        # 3 | click | id=idInputUsername |
        self.driver.find_element(By.ID, "idInputUsername").click()
        # 4 | type | id=idInputUsername | SUPERVISOR
        self.driver.find_element(By.ID, "idInputUsername").send_keys("SUPERVISOR")
        # 5 | click | id=login-panel |
        self.driver.find_element(By.ID, "login-panel").click()
        # 6 | click | id=idInputPassword |
        self.driver.find_element(By.ID, "idInputPassword").click()
        # 7 | type | id=idInputPassword | **
        self.driver.find_element(By.ID, "idInputPassword").send_keys("**")
        # 8 | click | id=submit.button |
        self.driver.find_element(By.ID, "submit.button").click()
        # 9 | click | id=BVMAPS |
        self.driver.find_element(By.ID, "BVMAPS").click()
        # 10 | click | css=#UI_BADGES_GRID\.gridView\.row\#22_Tcell\#0 > div > div |
        self.driver.find_element(By.CSS_SELECTOR, "#UI_BADGES_GRID\\.gridView\\.row\\#22_Tcell\\#0 > div > div").click()
        # 11 | click | id=badge.html.ribbon.properties |
        self.driver.find_element(By.ID, "badge.html.ribbon.properties").click()
        # 12 | click | id=__selection_4 |
        self.driver.find_element(By.ID, "__selection_4").click()
        # 13 | mouseDown | css=#\__pan_4 > .listItemNormal:nth-child(2) |
        element = self.driver.find_element(By.CSS_SELECTOR, "#\\__pan_4 > .listItemNormal:nth-child(2)")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).click_and_hold().perform()
        # 14 | mouseUp | id=__selection_5 |
        element = self.driver.find_element(By.ID, "__selection_5")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).release().perform()
        # 15 | click | css=#PROPERTIES_CONTROLS td:nth-child(2) .middlePart |
        self.driver.find_element(By.CSS_SELECTOR, "#PROPERTIES_CONTROLS td:nth-child(2) .middlePart").click()
        # 16 | click | id=badge.html.ribbon.properties.apply |
        self.driver.find_element(By.ID, "badge.html.ribbon.properties.apply").click()
        # 17 | click | css=body > img |
        self.driver.find_element(By.CSS_SELECTOR, "body > img").click()
        # 18 | click | css=a > img |
        self.driver.find_element(By.CSS_SELECTOR, "a > img").click()
        # 19 | click | id=main.html.btn_logout |
        self.driver.find_element(By.ID, "main.html.btn_logout").click()
